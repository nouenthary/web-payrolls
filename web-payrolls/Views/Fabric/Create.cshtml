@using web_payrolls.Helpers
@using web_payrolls.Models
@model List<web_payrolls.Models.tblProduction_Use_Fabrik_On_Cut>

@{
  ViewBag.Title = "Use Fabric";
  ViewBag.Page = "Use Fabric";

  // connection
  var db = new DB_Connection();
  var provider = new ContextProvider(new ClHelper(), new DB_Connection());
  // boss
  var hod = db
    .tblBosses
    .Select(boss => new SelectListItem()
    {
      Value = boss.PK_Boss_Id + "",
      Text = boss.Name,
      Selected = boss.PK_Boss_Id == provider.ManagerId
    })
    .ToList();

  // company
  var companies = db
    .tblCompanies
    .Where(company => company.FK_Boss_Id == provider.ManagerId)
    .Select(company => new SelectListItem()
    {
      Value = company.PK_Comp_Id + "",
      Text = company.Comp_Name,
      Selected = company.PK_Comp_Id == provider.ManagerId
    })
    .ToList();

  var products = db.tblProduction_Product
    .Where(x => x.tblProduction_ProductType.Pro_Type == "Fabric")
    .ToList();
}

<style>
  .style{
    width: 12px;
  }
</style>

@* Master *@
<div class="card" style="border-top: #428bca 3px solid;">
  <div class="card-body">
    <form method="post" id="form-add-details">

      @Html.AntiForgeryToken()

      <div class="row">

        <div class="col-md-12">

          <div class="row">

            @* choose master *@
            <div class="form-group col-md-3">
              <label>
                @Resources.Voucher.HOD<span class="text-danger"> * </span>
              </label>
              <div class="controls">
                @Html.DropDownList("txtManager", hod, "-- Choose Hod --", new {@class = "form-control"})
                <div class="help-block"></div>
              </div>
            </div>

            <div class="form-group col-md-3">
              <label>
                @Resources.Voucher.Company<span class="text-danger"> *</span>
              </label>
              <div class="controls">
                @Html.DropDownList("txtCompany", companies, "-- Choose Company --", new {@class = "form-control"})
                <div class="help-block"></div>
              </div>
            </div>

            @* <div class="form-group col-md-3"> *@
            @*     <label>@Resources.Voucher.Date<span class="text-danger"> * </span></label> *@
            @*     <div class="controls"> *@
            @*         <input type="date" name="date" id="date" class="form-control"> *@
            @*         <div class="help-block"></div> *@
            @*     </div> *@
            @* </div> *@
            @* *@
            @* <div class="form-group col-md-3"> *@
            @*     <label>@Resources.Voucher.Time<span class="text-danger"> * </span></label> *@
            @*     <div class="controls"> *@
            @*         <input type="text" name="time" id="time" class="form-control" placeholder="hh:mm" autocomplete="off"> *@
            @*         <div class="help-block"></div> *@
            @*     </div> *@
            @* </div> *@

            @* choose master *@
          </div>
        </div>

      </div>

    </form>
  </div>
</div>
@* Master *@

@* Input *@
<div class="row">

  <div class="form-group col-md-3">
    <label for="">Product</label>
    <select class="form-control" id="product_name" name="product_name">
      <option value="">-- Choose Product -- </option>
      @foreach (var row in products)
      {
        <option value="@row.PK_Pro_Id">@row.Pro_Name</option>
      }
    </select>
  </div>

  <div class="form-group col-md-3">
    <label for="">Product Grade</label>
    <select class="form-control" id="product_grade" name="product_grade">
      <option value="">-- Choose Product Grade -- </option>
    </select>
  </div>

  <div class="form-group col-md-3">
    <label for="">Qty</label>
    <input class="form-control" id="product_qty" placeholder="Enter Qty"/>
  </div>

  <div class="form-group col-md-3">
    <label for="" style="color: transparent">.</label>
    <button class="form-control btn btn-info btn-sm mb-2" id="btn-add-more" style="background: #428bca; color: #fff">
      <i class="ti-plus"></i>  Add New
    </button>
  </div>

</div>
@* Input *@


@* Sub *@
<div class="card">
  <div class="card-body">

    <div>
      <table class="table table-sm table-bordered" id="table-details">
        <thead>
        <tr class="text-center text-uppercase bg-info text-white">
          <th class="style">Product Type</th>
          <th class="style">Type Name</th>
          <th class="style">Product</th>
          <th class="style">Color</th>
          <th class="style">Size</th>
          <th class="style">Grade</th>
          <th class="style">Qty</th>
          <th style="width: 20px"></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var row in Model)
        {
          <tr class="text-center" data-id="@row.PK_Use_Fabrik_On_Cut_Id">
            <td><span class="label bg-info">@row.tblProduction_Grade.tblProduction_Product.tblProduction_ProductType.Pro_Type</span></td>
            <td>@row.tblProduction_Grade.tblProduction_Product.tblProduction_ProductType.ProType_Name</td>
            <td>@row.tblProduction_Grade.tblProduction_Product.Pro_Name</td>
            <td>@row.tblProduction_Grade.Color</td>
            <td>@row.tblProduction_Grade.Size</td>
            <td>@row.tblProduction_Grade.Grade_Name</td>
            <td>
              <input class="form-control text-center" id="qty" value="@row.In_QTY" style="width: 100px" onkeyup="this.value=this.value.replace(/[^\d]/,'')">
            </td>
            <td style="width: 50px">
              <button class="btn btn-danger btn-sm " id="btn-remove">
                <i class="ti-minus"></i>
              </button>
            </td>
          </tr>
        }
        </tbody>
        <tfoot>
        <tr class="text-center">
          <th class="bg-info text-white">TOTAL QTY</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th class="font-weight-bold" style="background: #28a745; color: #fff">@(Model.Sum(x=>x.In_QTY))</th>
           <th></th>
        </tr>
        </tfoot>
      </table>
    </div>

    <div>
      <button class="btn btn-info btn-sm mb-2 float-right" id="btn-save-close" onclick="window.location = '/StockInProductCut/Index'">
        <i class="ti-save-alt"></i> Save Close
      </button>
    </div>

  </div>
</div>
@* Sub *@

@section Scripts
{
  <script>
        $(function (){
            let token = { __RequestVerificationToken : $('input[name="__RequestVerificationToken"]').val()};

             // set select 2
            function Select2(ctn){
                $(ctn).select2({ width: '100%', placeholder: "Select an Option", allowClear: true });
            }
            // use
            Select2("#txtManager");
            Select2("#txtCompany");

            $('#txtManager').change(function (){
                let dataForSent = {
                    id: $(this).val(),
                    ...token
                };

                let {data} = GetDataApi('/Other/GetCompany',dataForSent);

                $("#txtCompany").html(setToSelect({data: data, label: "Company"}));
            });

            // details
            Select2("#product_name");
            Select2("#product_grade");

            // sweat alert
              function SweatAlert(message, type) {
                   swal({
                       title: message,
                       type: type,
                       timer: 1500
                   });
              }

               // get data from api
                function GetDataApi(url, data) {
                   let dataResponse = null;
                   let error = false;
                   $.ajax({
                     url: url,
                     async: false,
                     type: "POST",
                     global: false,
                     dataType: 'json',
                     data: data,
                     success: function(response) {
                        dataResponse = response
                     },
                     error: function() {
                       error =  true
                     }
                   });
                   return {data: dataResponse, error};
               }

               // get select option
               function setToSelect({data : data, label : label}) {
                     let option = '<option value="">-- ' + 'Choose ' +  label + ' --</option>';
                     for(let item in data){
                         option += '<option value="'+data[item].key+'">' + data[item].value + '</option>';
                     }
                     return option;
               }

               // only number
                function NumberQty(ctn){
                       $(document).on('keypress', ctn , function (e){

                         if(e.which === 46){
                            return false;
                         }

                         if (e.which !== 8 && e.which !== 0 && e.which !== 46 && (e.which < 48 || e.which > 57)) {
                             return false;
                         }

                         let text = $(this).val();

                         if (text[0] === '0') {
                            $(this).val(text.substring(1, text.length))
                         }
                       });
                 }

              // click add more

              let product = $('#product_name');
              let productGrade = $('#product_grade');

              // product type
              product.change(function (){
                  let dataForSent = {
                      id: $(this).val(),
                      ...token
                  };

                  let {data} = GetDataApi('/Fabric/GetProductGradeByProduct',dataForSent);

                  let grade = [];

                  for (let item in data){
                      grade.push({
                        key: data[item].PK_Grade_Id,
                        value: data[item].Grade_Name
                      });
                  }
                  // set to select

                  let option = '';

                  for (let item in data){
                      option += "<option value='"+ data[item].PK_Grade_Id +"' title='"+data[item].Picture_Path+"'>" + 'Grade : ' + data[item].Grade_Name + ' Color : ' + data[item].Color + ' Size : ' + data[item].Size + ' QTY : ' + data[item].QTY_Balance + "</option>"
                  }

                  productGrade.html(option);
              });


              // select list has image
               $("#product_grade").select2({
                templateResult: function (value) {
                        return $("<span>" + value.text + "</span>");
                  }
               });

              // Create
              $('#btn-save-close').click(function (){

              });

              NumberQty('#product_qty');

              let getParamsMap = function () {
                  let params = window.location.search.split("&");
                  let paramsMap = {};
                  params.forEach(function (p) {
                      let v = p.split("=");
                      paramsMap[v[0]]=decodeURIComponent(v[1]);
                  });
                  return paramsMap;
              };

              $('#btn-add-more').click(function (){

                  let stockInProductCutNo = getParamsMap()['Stock_In_Product_Cut_No'];

                  let qty = $('#product_qty').val();

                  qty = parseInt(qty);

                  let companyId = $('#txtCompany').val();

                  let gradeId = $('#product_grade').val();

                  if (!companyId){
                    SweatAlert('Please choose company...','warning');
                  }

                  if (!gradeId){
                     SweatAlert('Please Choose Product Grade...','warning');
                  }

                   if (!qty){
                    SweatAlert('Please Insert Qty...','warning');
                  }

                  if (!stockInProductCutNo){
                      SweatAlert('No Stock in product cut...','warning');
                  }

                  let data = {
                    stockInProductCutNo, qty, companyId ,gradeId, ...token
                  };

                  $.ajax({
                    type: 'post',
                    url: '/Fabric/AddItemFabric',
                    data: data,
                    success: function (r){
                        if (r.error){
                          SweatAlert(r.error ,'warning');
                          return;
                        }
                        window.location.reload();
                    }
                  });

              });
              // remove
              $(document).on('click','#btn-remove',function (){
                let id = $(this).closest('tr').attr('data-id');

                let con = confirm('Are you sure remove ?');

                if (con === false){
                    return;
                }

                $.ajax({
                  type: 'post',
                  url: '/Fabric/RemoveItem',
                  data: {id,...token},
                  success: function (r){
                    if (r.message){
                      window.location.reload();
                    }
                  }
                });
              });


              // update row item
              $(document).on('change','#qty',function (){
                let id = $(this).closest('tr').attr('data-id');

                let qty = $(this).closest('tr').find('input#qty').val();

                qty = parseInt(qty);

                let data = {
                  id,qty,...token
                };

                $.ajax({
                  type: 'post',
                  url:'/Fabric/UpdateItem',
                  data: data,
                  success:function (r){
                    if (r.error){
                        SweatAlert(r.error,"warning");

                        setTimeout(function (){
                           window.location.reload();
                        },1000);

                        return false;
                    }
                    window.location.reload();
                  }
                });
              });
        });
    </script>
}
