@using PagedList.Mvc
@model PagedList.IPagedList<web_payrolls.Models.tblNotification>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<style>
    .custom-select-form {
        padding: 2px;
        border: #dddddd 1px solid;
    }

    .list-group-item {
        padding: 0.2rem 1rem;
    }

    .table {
        margin-bottom: 0;
    }

    .table-responsive {
        box-shadow: 0 .5rem 1rem rgba(0,0,0,.15);
    }
</style>

<div class="row">

    <div class="col-md-3">
        <div id="Paging" class="pt-2">
            Show :
            <select class="custom-select-form" id="pageSize" name="pageSize">
                @foreach (var item in ViewBag.PageSize)
                {
                    if (item.Value == @ViewBag.psize + "")
                    {
                        <option value="@item.Value" selected>@item.Text</option>
                    }
                    else
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                }
            </select>
            entries
        </div>
    </div>

    <div class="col-md-9">
        <div class="row justify-content-end pr-3 pb-2">
            <div class="float-right">

                <div class="btn-group btn-sm" data-toggle="buttons">

                    <label class="btn btn-sm bg-white" id="btn-export-notificate">
                        <input type="radio" name="options" id="option3" autocomplete="off">
                        <span class="text-inverse">
                            <i class="ti-printer"></i> Excel
                        </span>
                    </label>
                </div>               
            </div>
        </div>
    </div>
</div>


<div class="table-responsive m-t-0 bg-white">
    <table class="table table-hover table-striped  table-bordered table-md" id="table-notificate">
        <thead>
            <tr style="border: 1px solid #f3f1f1">
                <th class="text-center">No.</th>
                <th class="text-center">Staff Name</th>
                <th class="text-center">Position</th>
                <th class="text-center">Department</th>
                <th class="text-center">Location</th>              
                <th class="text-center">Link</th>
                <th class="text-center">Notification</th>
                <th class="text-center">Status</th>
                <th class="text-center">Date Update</th>
                <th class="text-center">Time Update</th>
            </tr>
        </thead>
        <tbody>
            @{ int rowNo = 0; }

            @foreach (var item in Model)
            {
            <tr id="@item.PK_Notification_ID">

                <td class="text-center">@(rowNo += 1)</td>

                <td class="text-center">
                    <span class="text-primary"> @Html.DisplayFor(modelItem => item.tblStaff.Staff_Name)</span>                   
                </td>

                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.tblStaff.tblPosition.Pos_Name)
                </td>

                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.tblStaff.tblPosition.tblDepartment.Deppart_Name)
                </td>

                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.tblStaff.tblPosition.tblDepartment.tblLocation.Loc_Name)
                </td>

                <td class="text-center">
                    <a href="@item.Link" target="_blank"> @Html.DisplayFor(modelItem => item.Link)</a>
                </td>

                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Notification)
                </td>

                <td class="text-center">
                    @{
                        string color(string value) {
                            if (value == "Done")
                            {
                                return "label label-info";
                            }
                            else if (value == "Reject")
                            {
                                return "label label-danger";
                            }
                            else {
                                return "label label-success";
                            }
                        }
                    }
                    <span class="@color(item.Notification_Pending)">
                        @Html.DisplayFor(modelItem => item.Notification_Pending)
                    </span>                    
                </td>

                <td class="text-center">
                    <span class="text-danger"> @Html.DisplayFor(modelItem => item.Date_Update)</span>                   
                </td>

                <td class="text-center">
                    <span class="text-danger"> @Html.DisplayFor(modelItem => item.Time_Update)</span>
                </td>
            </tr>
            }
        </tbody>
    </table>

</div>

<div class="float-left" style="padding: 20px 0px;">
    Showing @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) to @Model.PageCount of @ViewBag.Records entries
</div>

<div class="float-right"> @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))</div>