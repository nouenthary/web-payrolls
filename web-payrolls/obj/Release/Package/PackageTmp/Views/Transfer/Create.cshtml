@using web_payrolls.Helpers
@using web_payrolls.Models
@model List<tblProduction_StockIn_Cut_On_Loc>
@{
  ViewBag.Title = "Transfer";

  // connection
  var db = new DB_Connection();
  var provider = new ContextProvider(new ClHelper(), new DB_Connection());
  // boss
  var hod = db
    .tblBosses
    .Select(boss => new SelectListItem()
    {
      Value = boss.PK_Boss_Id + "",
      Text = boss.Name,
      Selected = boss.PK_Boss_Id == provider.ManagerId
    })
    .ToList();

  // company
  var companies = db
    .tblCompanies
    .Where(company => company.FK_Boss_Id == provider.ManagerId)
    .Select(company => new SelectListItem()
    {
      Value = company.PK_Comp_Id + "",
      Text = company.Comp_Name,
      Selected = company.PK_Comp_Id == provider.ManagerId
    })
    .ToList();

  // location
  var locations = db.tblLocations
    .Where(x => x.FK_Comp_Id == provider.CompanyId)
    .Select(x => new SelectListItem()
    {
      Value = x.PK_Location_Id + "",
      Text = x.Loc_Name,
      Selected = x.PK_Location_Id == provider.LocationId
    })
    .ToList();
}

<style>
    label{
        font-size: 13px;
    }

    .btn-green {
         background: #428bca !important;
         color: white;
    }

    .style{
      width: 100px;
      font-size: 14px;
    }
</style>

<div class="card">

  <div class="card-body">

    <form method="post" id="form-add-details">

      @Html.AntiForgeryToken()

      <div class="row">

        <div class="col-md-12">

          <div class="row">

            @* choose master *@
            <div class="form-group col-md-3">
              <label>
                @Resources.Voucher.HOD<span class="text-danger"> * </span>
              </label>
              <div class="controls">
                @Html.DropDownList("txtManager", hod, "-- Choose Hod --", new {@class = "form-control"})
                <div class="help-block"></div>
              </div>
            </div>

            <div class="form-group col-md-3">
              <label>
                @Resources.Voucher.Company<span class="text-danger"> *</span>
              </label>
              <div class="controls">
                @Html.DropDownList("txtCompany", companies, "-- Choose Company --", new {@class = "form-control"})
                <div class="help-block"></div>
              </div>
            </div>

            <div class="form-group col-md-3">
              <label>
                @Resources.Voucher.Location<span class="text-danger"> *</span>
              </label>
              <div class="controls">
                @Html.DropDownList("txtLocation", locations, "-- Choose Location --", new {@class = "form-control"})
                <div class="help-block"></div>
              </div>
            </div>

          </div>
        </div>

      </div>

    </form>
  </div>
</div>


<button type="button" class="btn btn-default btn-sm mb-2" data-toggle="modal" data-target="#modal-add-more">
  <i class="ti-plus"></i> @Resources.Voucher.AddNew
</button>

@Html.Partial("ModalAddMore")


<div id="root">
  <div class="card">
    <div class="card-body">

      <h5><i class="ti-layout-grid2"></i> List All</h5>

      <table class="table table-sm text-center table-bordered" id="table-list-item">
        <thead>
        <tr class=" text-uppercase">
          <td class="text-center style">@Resources.Voucher.Location</td>
          <td class="text-center style">@Resources.Voucher.ProductType</td>
          <td class="text-center style">@Resources.Voucher.Product</td>
          <td class="text-center style">Color</td>
          <td class="text-center style">Size</td>
          <td class="text-center style">Grade</td>
          <td class="text-center style">@Resources.Voucher.Quantity</td>
          <td class="text-center" style="width: 20px"></td>
        </tr>
        </thead>
        <tbody>

        @foreach (var row in Model)
        {
          <tr data-id="@row.PK_StockIn_Cut_On_Loc_Id">
            <td>@row.tblLocation.Loc_Name</td>
            <td>
              <span class="label label-info">@row.Stock_In_Type</span>
            </td>
            <td>@row.tblProduction_Grade.tblProduction_Product.Pro_Name</td>
            <td>@row.tblProduction_Grade.Color</td>
            <td>@row.tblProduction_Grade.Size</td>
            <td>@row.tblProduction_Grade.Grade_Name</td>
            <td>
              <input class="form-control text-center" id="qty" value="@row.In_QTY"/>
            </td>
            <td>
              <button class="btn btn-danger btn-sm" id="btn-remove">
                <i class="ti-minus"></i>
              </button>
            </td>
          </tr>
        }

        </tbody>
        <tfoot>
        <tr class="text-uppercase">
          <th class="text-center bg-info text-white">@Resources.Voucher.Total QTY</th>
          <th class="text-center"></th>
          <th class="text-center"></th>
          <th class="text-center"></th>
          <th class="text-center"></th>
          <th class="text-center"></th>
          <th class="text-center bg-info font-weight-bold text-white">
            @Model.Sum(x => x.In_QTY)
          </th>
          <th class="text-center"></th>
        </tr>
        </tfoot>
      </table>

      <div class="">

        <div class="text-xs-right">

          <button type="button" class="btn btn-default btn-sm" onclick="location.href = '/Transfer/Index'">
            <i class="ti-back-right"></i> Back
          </button>

          <button type="button" class="btn btn-default btn-sm" id="btn-confirm" style="background-color: #28a745; color: #fff ; display: none">
            <i class="ti-check"></i> Confirm
          </button>


          <button type="button" class="btn btn-danger btn-sm" id="btn-reject" style="display: none">
            <i class="ti-check"></i> Reject
          </button>

          <button type="button" class="btn btn-default btn-sm float-right" id="btn-save-all">
            <i class="ti-save-alt"></i> @Resources.Voucher.Save Close
          </button>
        </div>

      </div>

    </div>
  </div>

</div>

@section Scripts
{
  <script>
    let token = { __RequestVerificationToken : $('input[name="__RequestVerificationToken"]').val()};

     function DropDownList
      (
          mainSelect, // main
          supSelect, // sup,
          subLabel  // sub label
      )
      {
        $(mainSelect).change(function (){
            let id = $(this).val();
            let dataForSent = {
                id,
                ...token
            };
            let {data} = GetDataApi('/Other/GetCompany', dataForSent);

            $(supSelect).html(setToSelect({data:data , label: subLabel}));
        });
      }
      // call
      DropDownList('#txtManager','#txtCompany', 'Company');

     function Select2(ctn){
         $(ctn).select2({ width: '100%', placeholder: "Select an Option", allowClear: true });
     }

     Select2('#txtManager');
     Select2('#txtCompany');
     Select2('#txtLocation');
     Select2('#product_name');

      // get data from api
     function GetDataApi(url, data) {
        let dataResponse = null;
        let error = false;
        $.ajax({
          url: url,
          async: false,
          type: "POST",
          global: false,
          dataType: 'json',
          data: data,
          success: function(response) {
             dataResponse = response
          },
          error: function() {
            error =  true
          }
        });
        return {data: dataResponse, error};
    }

    // get select option
    function setToSelect({data : data, label : label}) {
          let option = '<option value="">-- ' + 'Choose ' +  label + ' --</option>';
          for(let item in data){
              option += '<option value="'+data[item].key+'">' + data[item].value + '</option>';
          }
          return option;
    }

     // product name change
     $('#product_name').change(function (){
         let dataForSent = {
             ...token,
             id : $(this).val()
         };

         let {data} = GetDataApi('/StockInProductCut/GetProductGrade', dataForSent);

         let option = '';

         for (let item in data){
             option += "<option value='"+ data[item].key +"' title='"+data[item].Picture_Path+"'>" + 'Grade : ' + data[item].value + ' Color : ' + data[item].color + ' Size : ' + data[item].size +"</option>"
         }

         $('#product_grade').html(option);
     });

     // select list
      $("#product_grade").select2({
        templateResult: function (value) {
              return $("<span>" + value.text + "</span>");
         }
      });

      // company on change
      $('#txtCompany').change(function() {
          let dataForSent = {
               ...token,
               id : $(this).val()
          };

          let {data} = GetDataApi('/Other/GetLocation', dataForSent);

          $('#txtLocation').html(setToSelect({data:data, label : 'Location'}));
      });


       let getParamsMap = function () {
          let params = window.location.search.split("&");
          let paramsMap = {};
          params.forEach(function (p) {
              let v = p.split("=");
              paramsMap[v[0]]=decodeURIComponent(v[1]);
          });
          return paramsMap;
      };

      let edit = getParamsMap()['edit'];
      if(edit){
        $('#btn-confirm').attr('style','background-color: #28a745; color: #fff ;');
        $('#btn-reject').removeAttr('style')
      }

      // modal add more submit
      $(document).on('submit','#form-add-more-grade',function (e){
          e.preventDefault();

          let forms = $('#form-add-more-grade');

          let form = forms.serializeArray();

          let location_id = $('#txtLocation').val();

          let cut_location_id = getParamsMap()['stockInCutNoLocationId'];

          if (!location_id){
            alert('require location...');
            return;
          }

          if (!cut_location_id){
            alert('require product no id ...');
            return;
          }

          form.push({name: 'cut_location_id', value: cut_location_id });

          form.push({name: 'location_id',value: location_id });
          //console.log(form);return;
          $.ajax({
            type: 'post',
            url: '/Transfer/AddItem',
            data: form,
            success: function (r){

              if (r.error){
                SweatAlert(r.error,'warning');
                return false;
              }
              window.location.reload();
            }
          });

      });


       // remove item
       $(document).on('click','#btn-remove',function (){
         let id = $(this).closest('tr').attr('data-id');

         let con = confirm('Are you sure remove ?');

         if (!con){
           return false;
         }

         $.ajax({
            type: 'delete',
            url: '/Transfer/RemoveItem',
            data: {...token, id},
            success: function (response){
               if (response.error){
                  alert(response.message);
                  return false;
               }
               window.location.reload();
            }
         });
       });


       // update table row item
        $(document).on('change','#table-list-item tbody tr input',function (){

          let row = $(this).closest('tr');

          let id = row.attr('data-id');

          let qty = row.find('input#qty').val();

          //console.log(id, qty); return;

          $.ajax({
             type: 'put',
             url : '/Transfer/UpdateItem',
             data: {id, qty, ...token},
             success:function (r){
               if (r.error){
                  SweatAlert(r.error,'warning');
                  return false;
               }
               window.location.reload();
             }
          });
        });

        // sweat alert
        function SweatAlert(message, type) {
             swal({
                 title: message,
                 type: type,
                 timer: 1500
             });
        }

        // save all
        $(document).on('click','#btn-save-all',function() {
            let cut_location_id = getParamsMap()['stockInCutNoLocationId'];

            $.ajax({
              type: 'post',
              url: '/Notification/SetAlert',
              data: {
                ...token,
                link: '/Transfer/Index',
                note: 'Add Transfer',
                optionKey: 'TRANSFER_'+cut_location_id
              },
              success: function(r) {
                if(r.message){
                  location.href = '/Transfer/Index';
                }
              }
            });
        });


        // reject
        $(document).on('click','#btn-reject',function() {
          let cut_location_id = getParamsMap()['stockInCutNoLocationId'];

          const con = confirm("Are you sure reject ?");

          if(!con){
            return;
          }

          $.ajax({
            type: 'put',
            url: '/Transfer/UpdateStatus',
            data: {
              ...token,
              no: cut_location_id,
              status: 'Reject'
            },
            success: function(r) {
              if(r.message){
                UpdateStatus('TRANSFER_'+cut_location_id,'Reject');
              }
             location.href = '/Transfer/Index';
            }
          })

        });

        // confirm
        $(document).on('click','#btn-confirm',function() {
          let cut_location_id = getParamsMap()['stockInCutNoLocationId'];

           const con = confirm("Are you sure confirm ?");

            if(!con){
              return;
            }

          $.ajax({
            type: 'put',
            url: '/Transfer/UpdateStatus',
            data: {
              ...token,
              no: cut_location_id,
              status: 'Done'
            },
            success: function(r) {
              if(r.message){
                UpdateStatus('TRANSFER_'+cut_location_id,'Done');
              }
              location.href = '/Transfer/Index';
            }
          })
        });

        //Notification
        function UpdateStatus(optionKey, status) {
             $.ajax({
                type: 'post',
                url: '/Notification/UpdateStatus',
                data: {
                  ...token,
                  optionKey,
                  status
                },
                success: function(r) {
                    console.log(r)
                }
              })
        }


  </script>
}
